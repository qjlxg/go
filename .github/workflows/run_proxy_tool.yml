# .github/workflows/run_proxy_tool.yml

name: Update Proxies # 工作流的名称

on:
  push:
    branches:
      - main # 当推送到 main 分支时触发此工作流
  workflow_dispatch: # 允许手动触发此工作流

jobs:
  build-and-run: # 定义一个名为 build-and-run 的作业
    runs-on: ubuntu-latest # 在最新的 Ubuntu 运行器上运行此作业

    steps:
    - name: Checkout repository # 步骤名称：检出仓库
      uses: actions/checkout@v4 # 使用 actions/checkout@v4 动作来检出代码

    - name: Set up Python # 步骤名称：设置 Python 环境
      uses: actions/setup-python@v5 # 使用 actions/setup-python@v5 动作来设置 Python
      with:
        python-version: '3.9' # 指定 Python 版本为 3.9 (请确保与您的项目兼容)

    - name: Install dependencies # 步骤名称：安装依赖
      run: | # 运行多行命令
        python -m pip install --upgrade pip # 升级 pip
        pip install -r requirements.txt # 安装 requirements.txt 中列出的所有依赖

    - name: Ensure output directory exists # 步骤名称：确保 output 目录存在
      run: |
        mkdir -p output # 创建 output 目录，如果它不存在的话

    - name: Run proxy tool # 步骤名称：运行代理工具
      run: |
        python main.py # 执行 main.py 脚本

    - name: Commit and Push changes # 步骤名称：提交并推送更改
      run: |
        git config user.name "GitHub Actions" # 配置 Git 用户名
        git config user.email "actions@github.com" # 配置 Git 用户邮箱
        git add output/proxies.txt output/clash_config.yaml # 添加生成的文件到 Git 暂存区
        git commit -m "Update proxies [skip ci]" || echo "No changes to commit" # 提交更改，并跳过 CI 循环触发
        git push # 推送更改到远程仓库
