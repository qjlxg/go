# .github/workflows/run_proxy_tool.yml

name: Run Proxy Tool

on:
  # 调度运行：每天 UTC 时间 00:00 (北京时间上午 8:00) 运行
  schedule:
    - cron: '0 0 * * *'
  # 手动触发：允许您在 GitHub Actions 界面手动运行此工作流
  workflow_dispatch:

jobs:
  build-and-run:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 操作系统环境

    steps:
    - name: Checkout repository # 步骤1: 拉取您的代码
      uses: actions/checkout@v4

    - name: Set up Python # 步骤2: 设置 Python 环境
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # 您可以根据需要选择其他 Python 版本，例如 '3.10', '3.11'
        cache: 'pip' # 缓存 pip 依赖，加快后续运行速度

    - name: Install dependencies # 步骤3: 安装 Python 依赖
      run: |
        pip install -r requirements.txt

    - name: Run Proxy Tool # 步骤4: 运行您的 Python 脚本
      run: |
        python main.py

    - name: Commit output files # 步骤5: 提交 output 文件夹中的文件回仓库
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        # 检查 output/ 目录下是否有实际的更改，有更改才执行 commit
        git add output/
        git diff-index --quiet HEAD || git commit -m "Update validated proxies from workflow"
        git push
      env:
        # 重要的：您需要在仓库设置中给 GITHUB_TOKEN 赋予写入权限
        # 步骤如下：
        # 1. 进入您的 GitHub 仓库。
        # 2. 点击 "Settings" (设置) 选项卡。
        # 3. 在左侧导航栏中，点击 "Actions" 下的 "General" (通用)。
        # 4. 向下滚动到 "Workflow permissions" (工作流权限) 部分。
        # 5. 选择 "Read and write permissions" (读写权限)。
        # 6. 点击 "Save" (保存) 按钮。
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
